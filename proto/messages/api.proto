syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option go_package = "github.com/woodhds/vk.post.predict;vk_messages";


service MessagesService {
  rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse) {
    option(google.api.http) = {
      get: "/api/messages"
    };
  };
}

message GetMessagesRequest {
  google.protobuf.StringValue search = 1;
}

message GetMessagesResponse {
  repeated VkMessageExt messages = 1;
}

message VkMessageResponse {
  int32 id = 1;
  int32 from_id = 2 [json_name="fromId"];
  google.protobuf.Timestamp date = 3;
  repeated string images = 4;
  int32 likes_count = 5 [json_name="likesCount"];
  google.protobuf.StringValue owner = 6;
  int32 owner_id = 7 [json_name="ownerId"];
  int32 reposts_count = 8 [json_name="repostsCount"];
  string text = 9;
  bool user_reposted = 10 [json_name="userReposted"];
}

message VkMessageExt {
  VkMessageResponse message = 1;
  string category = 2;
  bool is_accept = 3 [json_name="isAccept"];
  map<string, float> scores = 4;
}